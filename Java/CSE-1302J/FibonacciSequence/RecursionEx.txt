The difference in runtimes between the iterative and recursive fibonacci methods are not the same. The iterative method takes up less time and memory than the recursive fibonacci method. These differences come from the use of a stack that is generated through the recursive nature. Because the initial input is not the base case, its value is put into a stack with an assigned memory address used for later retrieval and processing.  So, by calling the recursive fibonacci method for n=40, there is going to be 39 addresses assigned to values that are going to be processed/returned once the input case is processed/returned. 
This stack/recursive process is slower in a sense because the iterative method processes them as they come, instead of assigning an address, placing it in a stack, return the first value once it is met, then pull the value at the top of the stack, return it, and repeat until the stack is empty.  